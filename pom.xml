<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cox.plm</groupId>
	<artifactId>plm-web</artifactId>
	<packaging>war</packaging>
	<version>1.0.1</version>
	<name>plm-web</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compile.version>2.3.2</maven.compile.version>
		<java.version>1.8</java.version>
	</properties>

	<distributionManagement>
		<repository>
			<id>artifactory</id>
			<name>repo.corp.cox.com-releases</name>
			<url>https://repo.corp.cox.com/artifactory/cox-plm</url>
		</repository>
		<snapshotRepository>
			<id>artifactory</id>
			<name>repo.corp.cox.com-snapshots</name>
			<url>https://repo.corp.cox.com/artifactory/cox-plm</url>
		</snapshotRepository>
	</distributionManagement>
  
	<repositories>
		<!-- added for disabling access to maven central -->
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<!-- External dependency -->
		<!-- <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> 
			<version>4.10</version> <scope>test</scope> </dependency> <dependency> <groupId>javax</groupId> 
			<artifactId>javaee-api</artifactId> <version>7.0</version> <scope>provided</scope> 
			</dependency> -->
		<!-- ORACLE database driver -->
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.0</version>
			</plugin>
		</plugins>
	</reporting>


	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<finalName>plm-web</finalName>
		<plugins>

			<!-- Facilitates downloading source and javadoc in Eclipse -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<arguments>${build.name}</arguments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.3.5</version>
				<extensions>true</extensions>
				<configuration>
					<supportedProjectTypes>
						<supportedProjectType>war</supportedProjectType>
						<supportedProjectType>jar</supportedProjectType>
					</supportedProjectTypes>
				</configuration>
			</plugin>

			<!-- JBoss AS plugin for command line deployment -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-maven-plugin</artifactId>
				<version>1.4.1</version>
				<configuration>

					<jbossHome>${jboss.home}</jbossHome>
					<serverName>${jboss.domain}</serverName>
					<fileNames>
						<fileName>${project.build.directory}/${project.build.finalName}.war</fileName>
					</fileNames>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webXml>WebContent\WEB-INF\web.xml</webXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compile.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
